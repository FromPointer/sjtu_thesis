%%==========================
%% chapter01.tex for SJTU Master Thesis
%% based on CASthesis
%% modified by wei.jianwen@gmail.com
%% version: 0.3a
%% Encoding: UTF-8
%% last update: Dec 5th, 2010
%%==================================================

%\bibliographystyle{sjtu2} %[此处用于每章都生产参考文献]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%   绪论
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\chapter{绪论}
\label{chap:introduction}

%%%%%这是上海交通大学(非官方)硕士学位学位论文 \LaTeX 模板，当前版本是 \version 。


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%   研究背景和意义
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{研究背景及意义}
\label{sec:instroduction_background}

 随着网络技术的飞速发展，人们生活中的点点滴滴（从办公、娱乐到洗衣、做饭）逐渐网络化，导致网络中数据的量级呈指数增长。在这些数据的面前，先前的计算技术和存储能力显得有些力不从心。在此背景之下，一种全新的网络技术油然而生 --- 即“云存储”和“云计算”技术。它们的出现分别从理论上解决了大数据的存储和计算问题。为此，实际中各大企业纷纷提出不同场景下的“云”解决方案以满足各自的需求。亚马逊（Amazon）率先推出弹性计算云（Elastic Compute Cloud --- EC2）服务\cite{walker2008benchmarking}；Google 首席执行官埃里克·施密特（Eric Schmidt）在搜索引擎大会首次提出“云计算”（Cloud Computing）\cite{bogatin2006google}的概念；随后包括IBM、Microsoft、Intel、Apple 和YAHOO等一些大型企业都开始部署自己的云存储和计算平台。由此，网络计算和存储的发展正式进入“云”的世界。

 “云计算”是一种基于互联网的计算方式，按照这种方式，云终端将已部署的资源(如网络、服务器、存储、应用及服务)按需提供给云用户,并最大程度地减少用户对资源的管理和配置\cite{mell2009nist}。通过互联网，云计算为使用者提供强大的可伸缩和廉价的分布式计算能力，并且在使用过程中，使用者不需要了解云端基础技术的细节和具备相关的专业知识，就能对云端资源进行合理的控制和使用。根据美国国家标准与技术研究院(NIST) 的定义\cite{above2009Armb}，云计算提供三种不同层次的服务：
 \begin{enumerate}
   \item
   软件即服务（SaaS）：用户可以通过租借云平台上的软件来为自己提供服务或无偿使用一些基础服务软件；

   \item
   平台即服务（PaaS）：用户利用云计算服务提供商的平台，通过免费或低价租借的方式来部署自己的软件；

   \item
   基础设施即服务（IaaS）：云用户可以利用云平台基础设施来获得所需服务。

 \end{enumerate}

 当前的云计算模型按照部署方式主要包括公有云、私有云、社群云和混合云。公有云通过网络及第三方服务提供给用户使用；私有云具有许多公有云环境下的优点（如弹性，实时提供服务），两者差别主要在于，私有云资源仅需在组织内部管理和使用，不会受到网络带宽和安全疑虑的影响；社群云主要由许多利益相仿的组织掌握和使用，社群内成员可以使用共有的资源，避免了公有云开放环境的安全问题；混合云则基于经济性、可用性等的考虑，是公有云和私有云的结合。云计算部署模型从数据隐私方面的角度来考虑，具备以下特点：
 \begin{itemize}
   \item
   在公有云环境下，由于数据拥有者与服务提供商站在不同的立场上并且拥有不同的利益，使得服务提供商并不被完全信任（semi-trusted)；

   \item
   在私有云环境下，虽然云资源仅在组织内部使用，但由于云计算普遍采用虚拟化技术\cite{chiueh2005survey}来提高系统的资源利用率和降低运营成本，不同用户的数据可以同时在同一物理服务器上进行计算和存储。跨虚拟机攻击\cite{ristenpart2009hey} 使得用户数据有可能被同一物理服务器上的其他用户非授权访问。

 \end{itemize}

 由于“云”计算提供廉价的计算和强大的可伸缩，越来越多的用户将本地的数据移植到“云”平台。与此同时，一些云安全事故也频频发生（e.g.2011年谷歌邮箱爆发大规模的用户数据泄漏事件，2014年Apple公司icloud 帐号泄漏事件）。在透明的云环境下，用户简单地将数据以明文形式存储在云服务端存在明显的缺陷 --- 数据安全隐患。因此，当数据拥有者将数据存储到云服务端后，如何确保云端数据隐私，避免云端数据被未经授权用户所访问成为云端数据隐私安全研究的焦点。

%% 为了解决上述安全问题，最简单的做法就是用户在将其数据上传至非可信服务器之前，先进行数据加密；当需要使用数据时，从服务器下载密文数据并进行解密。这种做法在解决数据隐私性问题的同时，带来了新的数据可用性问题 --- 如何对服务器上的数据进行有效地搜索。由于数据处于加密状态，服务器无法解密，在传统安全机制下，云用户只能下载所有上传的数据，解密之后进行搜索。这种做法将耗费大量的网络资源，且并没有充分利用云端强大的计算能力。

%%为了解决上述查找低下的不足

为了解决该安全隐患带来的缺陷，一些学者利用传统的安全机制解决了数据隐私泄漏的问题，具体过程如下：数据拥有者在将数据存储到并非完全可信的服务端之前，首先将数据加密\cite{biham1993differential}, 然后将数据以密文的形式存储到云服务端；当用户需要使用数据时，首先将存储在服务器端的加密数据全部下载下来，然后进行解密并查找获得所需的文件。该机制虽然解决了数据的隐私问题，同时带来了新的问题 --- 如何才能保证云存储和计算资源被高效地利用。这种做法不仅耗费大量的网络资源，同时也增加了用户的计算开销，这些都与云计算服务的设计理念和用户需求相违背。因此，如何高效利用云端的存储和计算能力是当前关注的重点。

为了解决上述查找效率低下的缺陷，在“云”计算平台下一种新的确保数据隐私且具备高效计算的技术被提出 --- 可搜索加密技术。可搜索加密技术解决了上述难点，其过程描述如下：数据拥有者对文档进行可搜索加密，然后存储到云服务平台；当授权的用户需要查找文档时，使用搜索条件陷门（Trapdoor）生成算法将单词的陷门提交至云服务端；一旦云服务端收到搜索陷门后，便直接在用户的密文数据上进行搜索操作，并将搜索结果返回给用户。在方案整个过程中，云服务器无法知晓用户数据以及搜索条件的任何信息，保证了数据隐私性；在网络上仅传输符合搜索条件的数据，而不是所有外包的数据，大大降低了网络资源的消耗；同时请求者只需解密符合条件的文档，大大节省了用户昂贵的计算能力和存储空间。


可搜索加密技术包括对称可搜索加密(Symmetric searchable encryption)、公钥可搜索加密(Public key encryption with keyword search)和多用户(Multi-User)可搜索加密技术。近年来，这些技术都得到的广泛的关注。它们的研究领域极其广泛，包括：单关键字搜索、多关键字搜索、模糊搜索、范围搜索、布尔搜索搜索和动态搜索等。这些方案试图提供一个具有完备功能、高性能和强安全的解决方案。相似搜索（包括模糊搜索和同义词搜索\cite{grefenstette1994explorations}）在明文场景下得到了广泛的研究和应用，虽然这些技术在加密数据上也被关注和研究，但是其研究成果尚有不足。并且在实际研究中，人们仅仅关注模糊搜索却忽略了同义词搜索的情形。此外，这些基于逆向索引的方案在查找时的信息泄漏有所偏多 --- 包括大小模式（size pattern）、访问模式（access pattern） 和搜索模式（search pattern），可以得到进一步的降低。

综上所述，我们能进一步对相似搜索技术进行的研究，不仅由于其方案不够完善同时包括原有方案存在缺陷；特别是同义词搜索技术，它在实际应用中也存在着极大的需求，因而提出安全的相似搜索加密方案对理论和实际都具有远大的意义。同样地，对目前基于semi-trusted的云环境下的对称可搜索的方案的信息泄漏问题进行深入研究，更多地保护用户的搜索隐私，即解决如何进一步降低这些信息的泄漏的问题，不仅能加快推进其在实际中应用的进度，同时也使可搜索加密技术在安全上有所突破，树立一个新的里程碑。为此，探究实用的相似可搜索方案和减少信息在云计算可搜索场景下的泄漏，对安全的云计算的普及具有重要的意义。


%%%对文件进行某种加密的对称可搜索加密技术在解决了上述问题的同时，带来了搜索效率的问题—如何避开对非结果文件进行搜索。为了解决上述暴露的搜索效率问题，一些学者在原有技术的基础上提出了新的解决方案-- 基于安全索引的可搜索加密技术。其基本过程如下：用户首先将文件中以单词为单位（反向索引）或文件为单位（正向索引）来构建安全索引，然后将安全索引和数据的密文形式（以某种加密算法加密）存储到云服务端；当用户需要查询包含某单词的文件时，用户首先计算该单词的令牌并将令牌发送给云服务端，然后云服务端使用单词令牌在安全索引上直接进行搜索，最后仅将满足搜索条件的结果返回给用户。在方案的整个过程中，文件以密文形式存储和服务器的搜索建立在安全索引上，没有暴露用户数据的任何明文信息给服务端，既保证了数据的隐私或由于在安全索引上进行搜索而导致少量的必要的信息泄漏（主要包括size pattern、access pattern 和搜索search pattern）；同时仅返回查询结果，降低了网络的传输开销和用户的计算开销。


%%上述可搜索加密技术解决了数据外包带来的安全隐患，仅适用于精确搜索的情形—即用户输入单词即恰好为搜索单词的情形。但是在现实环境下，用户在查询时输入单词中可能包含少量错误（例如将“exact”写成了“egact”）或者输入格式不一致（例如将“data-mining”写成“data mining”），使得在上述精确的可搜索方案下无法进行有效搜索，为此需提供一种既能进行精确搜索又能容忍较小错误的搜索方案。在明文搜索环境下，容忍错误的搜索技术—模糊搜索使用了简单的单词拼写检查机制，这样方式虽然能从一定程度上解决该问题，但是存在以下两个主要的问题：用户需要进行交互并花费额外的计算开销来从拼写检查算法的候选单词集中确定正确的单词；同时当用户误输入某些有效的单词（如将“cat”写成“bat”）时，拼写检查算法失效。为了解决密文环境下的模糊搜索问题，一些学者[9]在前人成果上（精确可搜索加密技术、数据库模糊查询[20]以及明文模糊搜索技术）提出了技术解决方案— 基于编辑距离和通配符的模糊可搜索加密技术。其过程如下：用户首先对每个单词的模糊集构建安全索引，然后包含模糊信息的安全索引和数据密文存储到云服务端；在查询时，用户构建待查单词的模糊集并将模糊集生成的令牌集发送给服务端，最后在服务端的安全索引上进行搜索并返回查找的结果。该方案虽然解决了模糊可搜索加密的问题，同时存在一定不足之处—即在构建索引和查询时，对每个单词构建模糊集显然增加了服务端的存储开销和网络的传输代价以及用户的计算开销，同时不同单词的模糊集可能存在交集也将导致一定的信息泄漏。为此，能否构建一个更有效的和安全的模糊可搜索加密方案成为本课题研究的焦点。
%%
%%以上方案解决的都是基于静态环境下的可搜索加密问题—即数据一次性存储，数据存储后只能进行查询而不能进行动态修改。然而，在真实的环境下，用户经常需要对云端文件进行动态的修改—添加或删除云端文件。上述方案并不能保证云端数据在动态修改的同时，数据的隐私泄漏问题也得到保障。为此，一些学者结合正向索引（即文件为单元来构建安全索引）和反向索引（即以单词为单元来构建安全索引）构建了新的方案—动态可搜索加密技术。在动态可搜索加密方案[10]的安全证明过程中，由于其安全模型是基于[7]中静态的安全模型，仅仅考虑单独每个过程的信息泄漏问题，并没有考虑到动态修改交叉进行所带来的信息泄漏问题。在文章[22]中，作者指出了以前的动态方案还存在正向隐私（forward privacy）和反向隐私（backward privacy）的信息泄漏问题。为此，构建一个新的动态搜索安全模型并且正确衡量信息泄漏问题成为可搜索加密技术应用于实际中必不可少的一个环节。
%%
%%
%%从上述分析中，我们可以看出现有的方案虽然实现了对静态环境下安全的精确搜索，但是在模糊和动态环境下仍然存在不少缺陷—主要是模糊搜索和动态搜索方案中的计算、存储和传输开销过大以及信息泄漏过多等问题，并且这些问题已成为可搜索加密方案应用到实践中的绊脚石。因此，在该课题中我选取以对称可搜索加密方案中模糊搜索和动态搜索为研究对象，不仅因为这些方案尚存在不足之处，而且这些难点在实际应用中具有广泛的应用前景，这些问题的攻克对理论和实际都将产生一定的推动作用。


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%   研究现状与相关问题
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{研究现状及相关问题}
\label{sec:introduction_modern}

D.Song在\cite{song2000practical}中给出了第一篇对称可搜索加密方案，方案使用传统的加密算法对文档中的每个单词单独加密，来对文档中的数据进行保护。方案的主要缺点是搜索效率低下，同时也泄漏了文章中单词的位置和出现的频率等信息。

为了加快检索，之后的所有可搜索加密方案都使用索引技术。安全索引包括正向索引和反向索引。
文章\cite{goh2003secure}\cite{chang2005privacy}使用正向索引技术解决了对加密数据搜索效率低下的问题，搜索时间为$O(n)$（$n$ --- 表示文章的数目）。这两篇文章都用到了Bloom Filter技术加快检索，\cite{goh2003secure}的不足在于引入了误报率 --- 与哈希函数的碰撞密概率切相关，而方案\cite{chang2005privacy}避免了误报，但是增加了服务器的开销。


为了进一步降低查找时间，\cite{curtmola2006searchable}\cite{van2010computationally} 使用反向索引技术进一步降低了服务器的查找时间（$O(1)$）。curtmola\cite{curtmola2006searchable}是最早使用反向索引技术的可搜索加密方案，并给出了正式化的方案、完整的安全性定义和严格的安全证明。而Van\cite{van2010computationally}提出了另一种形式的安全索引方案，方案使用一个加密的二元数组维护安全索引信息，数组两维分别表示单词和文档$ID$，数组元素为“1”表示对应的文档包含对应的单词。搜索时解密二维数组中对应单词所在的行，即可知晓包含该单词的文档$ID$。

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  information leakage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
当前绝大部分可搜索加密方案假定服务器是诚实但好奇(honest-but-curious)的，即服务器严格遵守方案的算法和流程，但是因好奇而在用户搜索过程中偷偷分析文档的信息，希望了解文档的更多信息。而实际中，若服务器不遵守规定，如将篡改搜索结果，把某些文档从搜索结果中删去，客户端却无法知晓这些篡改情况。Chai \cite{chai2012verifiable}\cite{kurosawa2012uc}给出了一个支持搜索结果验证的对称可搜索加密方案，可以知晓服务器是否遵守方案协定，而K. Kurosawa\cite{kurosawa2012uc}中的方案可以让客户端进一步精确知晓服务器返回的搜索结果文档中，是否有误报或者漏报的情况，如果有漏报，具体是遗漏了哪些文档。但该方案的安全索引结构增加了大量的存储空间。M. Chase在\cite{chase2010structured}中提出了一种可控信息揭露(Controlled Disclosure)的结构数据加密思想，这种数据密文可以在保持一定机密性的情况下实现快速查询。作者Mohamad则在\cite{boneh2003identity}中讨论了可控信息揭露的结构数据加密应如何支持验证，以确保查询结果是正确的。

%%上述方案都仅仅支持单关键词的精确搜索，不支持复杂条件搜索 --- 模糊搜索、布尔搜索、优先级搜索等。文章\cite{golle2004secure}最早提出了的支持布尔与功能(conjunctive search)的对称可搜索加密方案。该方案为每个文档创建一个安全索引，索引中包含文档单词及其位置信息，搜索时需提供所有参与逻辑与操作的单词陷门及其对应的位置，只有单词和位置都符合的文档才会作为搜索结果。上述布尔方案性能较低，L. Ballard在\cite{ballard2005achieving}中提出了两个支持逻辑与搜索的改进方案，分别基于Shamir门限秘密分享\cite{shamir1979share}方案和双线性映射，效率上有所提高。以上方案均仅支持逻辑与的搜索操作，T. Moataz在\cite{moataz2013boolean}第一次提出支持逻辑与或非布尔搜索的方案。该方案将每个单词转换成相互独立的矢量，然后通过Gram-Schmidt过程正交化，以此建立安全索引。并且T. Moataz还进一步讨论了支持逻辑或和逻辑非的方案，通过严格证明该方案具有Adaptive的语义安全，但是仍存在性能和客户端存储量过大的问题。

上述方案仅仅支持精确搜索，当面对输入中存在小的错误（如：将“people”误写成“peopel”）或输入单词不一致（如：data mining与data-mining）时，显得无能为力。
\cite{li2010fuzzy}\cite{wang2012achieving}\cite{kuzu2012efficient}提出了支持模糊搜索的可搜索加密方案。\cite{li2010fuzzy}提出使用编辑距离与通配符来如何构造模糊可搜索方案，但缺乏完整的方案描述和严格的安全证明。C. Wang 在\cite{wang2012achieving}中使用单词查找树提出了具体详细描述的模糊可搜索加密方案，该方案使用trie树构造安全索引降低了服务器的存储空间和查找时间。而M. Kuzu在
\cite{kuzu2012efficient}中使用locality sensitive hashing(LSH)算法\cite{indyk1998approximate}， 实现了一个具有更广义的和快速检索的模糊搜索方案。M. Chuah在\cite{chuah2011privacy}中将模糊搜索从单个关键词拓展到多个关键词的情况。但是这些方案都存在一个缺陷 --- 模糊集之间存在碰撞，降低了方案的安全性；此外，他们不支持同义词搜索。同义词指不同单词之间存在相同的含义，同义词搜索指用某单词搜索返回所有包括该单词及其同义词的文档。

到目前为止，所有基于Inverted-index的方案都泄漏了trace信息（在curtmola方案中定义） --- 包括大小模式、搜索模式和访问模式。从某种意义上来说，这样的信息泄漏仍不能被用户所接受 --- 敌手能使用统计信息和查找的先验知识推断出用户搜索的单词。文章\cite{islam2012access}提出了一个攻击模型，该模型能在敌手已知一定知识的条件下，利用访问模式发现用户搜索的敏感信息，并且作者针对这种攻击给出了相应的解决方案。不幸的是，方案引入了冗余信息和误报率，并且没有讨论搜索模式的泄漏所带来的安全问题。作者Liu 在\cite{liu2014search} 中提出两个统计攻击模型，并在该模型下利用通用方案中的搜索模式以很大的概率推断出用户查找的单词。然后提出了一种能在该模型下避免搜索模式泄漏的新方案。但是，这方案引进了误报率和大大增加了传输开销，同时也增加了客户端的计算量。





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%   研究内容与成果
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{研究成果}
\label{sec:introduction_whydvipdfm}

%\subsection{研究内容}
%\label{sec:introduction_research_content}
%????
%本课题所研究的内容都基于对称环境下的可搜索加密方案。我们的研究内容主要集中在相似可搜索加密技术（FSSE）、动态对称可搜索加密技术（DSSE）及传统可搜索加密方案上的安全性改进。本课题的研究内容包括如下几方面：
%\begin{enumerate}
%  \item
%  详细地分析现有模糊可搜索加密方案和动态可搜索加密方案，指出方案中存在的不足。如当前模糊可搜索加密方案中普遍存在一个被忽略的问题：不同单词的模糊集可能存在交集，这个碰撞情形的存在会导致敌手对用户多次的查询内容进行分析，推断出用户的搜索关键字，这大大降低了方案的安全性，导致了更多的数据隐私被泄漏；而动态可搜索加密方案中并没有提出一个新的安全模型，分析可以了解到使用静态方案的安全模型并不能很好描述和证明真实的信息泄漏。在本课题中，我们将对这些问题进行研究。
%
%  \item
%  研究现有对称可搜索加密方案中的信息泄漏 --- 搜索模式、访问模式和大小模式；其次探讨当前方案普通忽略的一个问题 --- 密文文档在查找时的信息泄漏（文档与关键字的关联）。在理想情况下，服务器不应该从查找过程及结果中了解到文档的大小、文档的个数以及单词与文档之间的关系。
%
%
%  \item
%  研究相似可搜索加密技术中的另一个未被探究的场景 --- 同义词搜索技术，同义词指不同的两个单词在同一个场景下具有相同的含义。最终设计出具有强安全性、高效性和适用性的同义词对称可搜索加密方案。
%
%\end{enumerate}
%
%
%\subsection{研究成果}
%\label{sec:introduction_research_result}
%????

%在本文中，我们选择对对称可搜索技术中同义词搜索和curtmola方案中定义的信息泄漏进行深入的研究，分别提出相应的解决方案。我们的研究成果包括如下两个方面：

在本文中，我们将对称可搜索技术中同义词搜索和curtmola方案中所定义的信息泄漏作为研究对象，分别提出相应的解决方案。我们的研究成果包括如下两个方面：
\begin{enumerate}
  \item
  首先，我们在安全的云环境下提出了未被研究的同义词搜索问题，并设计了一个形式化的支持同义词搜索的可搜索加密方案（PSSSE）。为了描述同义词关系，我们的方案定义了同义词函数和同义词字典，并针对同义词字典构建了安全的循环链表索引结构；此外，我们的方案在增加功能的同时没有降低性能的要求，传输开销仍为$O(1)$，查找时间复杂度仅为$O(p)$（$p$ --- 单词同义词集合的最大长度），计算开销为$O(p)$。 最后，基于该方案中定义的信息泄漏，我们证明我们提出的技术达到了Non-adaptive的安全。此外，该方案能进一步应用到各种复杂的条件搜索方案中，弥补已有方案的不足。
 % 在semi-trusted 的云环境下，设计出了一个低存储开销和通讯开销并支持同义词搜索功能的可搜索加密方案。方案在提升可用性的同时，并没有降低安全性和增加客户的计算和存储开销。此外，我们详细地，并分析其能获得高效的查找性能和通讯开销。

  \item
  其次，我们提出了一个降低信息泄漏的可搜索加密方案，能在不降低功能的同时避免查找时大小模式的泄漏，仅以概率泄漏搜索时的访问模式和搜索模式。在该方案中，我们对文档进行分块处理，降低了单词与文档的关联度；同时我们在建立安全索引阶段，使用史密斯正交化理论构建的正交基对每个单词进行预处理，再构建单词的安全索引；在搜索时，我们按同样方式对单词进行预处理，然后构建正交基向量的法平面，随机选取平面内的任一向量作为单词搜索口令，即同一单词有不同的查找陷门对应，避免了服务器根据单词口令推断出系统的搜索模式；针对该方案，我们提出了对应的攻击模型和定义了信息泄漏，并通过严格的安全分析，证明了我们的方案达到curtmola文中所定义的Non-adaptive的安全级别；同时，我们的方案具有良好的可扩展性，能应用于所有单关键字的可搜索加密方案。但是，我们的方案增加服务器的存储和计算开销。

%%
%%  提出基于史密斯正交化理论的具有更少信息泄漏的方案，不仅避免了查找时搜索模式的信息泄漏，同时通过增加服务端的额外存储开销，降低了访问模式的泄漏 --- 仅以概率泄漏。并通过严格的安全分析，证明了我们的方案具备Non-adaptive 的语义安全性。同时，我们的方案能拓展到所有单关键字的云搜索加密技术中。

\end{enumerate}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%   论文结构
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{论文结构}
\label{sec:introduction_thesisformat}

本文的内容分为五章，其结构安排如下：
\begin{itemize}
  \item
  第一章，绪论，首先介绍了课题的研究背景，然后介绍当前国内外在该领域的研究现状，之后介绍了本文的研究内容及所取得的成果，并对本文的结构进行了总结。

  \item
  第二章，对称可搜索加密技术，先介绍了本课题在对称可搜索加密领域的相关知识，并介绍了通用的安全证明模型，最后分类介绍了对称可搜索加密领域具有代表性的一些成果，提出已有研究成果的不足和描述可研究的知识点。

  \item
  第三章，抗信息泄漏的可搜索加密方案，首先描述了目前单关键词可搜索方案的信息泄漏，提出了解决该方案需要的定义及安全模型，然后提出一个首先给出同义词对称可搜索加密方案的若干定义和安全模型，并给出了方案的安全性证明。

  \item
  第四章，同义词对称可搜索加密方案，首先给出同义词对称可搜索加密方案中的若干定义、安全模型与攻击模型，然后提出一个具有实践的安全的同义词可搜索加密方案并给出了优化方法，并对方案进行了完整安全性证明和性能分析。

  \item
  第五章，总结和展望，系统地概述了我们在该课题中的工作与成果，并根据目前的研究现状对将来的工作作出了规划与展望。

\end{itemize}



%%%%%
%%%%%所有关于研究生学位论文模板的要求，我参考的都是下面这个教务处的网址
%%%%%\href{http://www.gs.sjtu.edu.cn/policy/fileShow.ahtml?id=130}{《上海交通大学研究生学位论文格式的统一要求 》}。
%%%%%
%%%%%可惜，这个网址没有给出具体可用的“模板文件”。
%%%%%并且，``要求''中的一些要求也不仅合理，譬如，公式和公式编号之前要用……连接，实现起来困难，看起来也不美观，从来没有人这样用，所以无视之。
%%%%%师兄师姐的学位论文也是我可以参考的“范本”，尽管这些范本也不是很规范。
%%%%%我希望制作出的这个学位论文模板尽可能符合教务处的要求，如果有任何建议，欢迎提出！
%%%%%
%%%%%这个模板是为``双面打印''准备的，也就是说，迎面页总是奇数页，新的一章将从奇数页开始，``迎面页''和``背面页''(或者说奇数页和偶数页)的左右页眉是相互颠倒的，奇数页和偶数页的左右页边距也会被颠倒。通过双面打印得到的学位论文就像一本正常的书。
%%%%%
%%%%%你可以将diss.tex中设定文档类的语句改为：
%%%%%
%%%%%\begin{quote}
%%%%%  {\scriptsize\verb+\documentclass[cs4size, a4paer, cs4size, oneside, openany]{sjtuthesis}+}
%%%%%\end{quote}
%%%%%
%%%%%这样，就变成了适合“单面打印”的论文，新的一章可以从偶数页开始。
%%%%%
%%%%%关于页眉页脚。奇数页页眉为：左边``上海交通大学硕士学位论文''，右边：``章节名''；偶数页页眉为：左边``上海交通大学硕士学位论文''，右边：``论文题目''。每一章的内容按照排书的习惯，均从奇数页开始。
%%
%%教务处要求参考文献必须符合GBT7714风格，学校明确提出使用这个标准而不是自己拍脑袋想出别的做法，应该算是谢天谢地了。使用这个模板，结合BibTeX，可以很方便地生成符合GB 标准的参考文献列表。
%%%%%%
%%%%%%\section{模板更新说明}
%%%%%%\label{sec:update}
%%%%%%
%%%%%%我希望这个模板能够成为大家完成学位论文的助手。
%%%%%%我会在一段时间内(一个月？一年？)，继续维护这个模板，修正其中的错误和不理想的地方。
%%%%%%我还计划向模板中添加常用的``例子''，譬如表格、公式、图片的排版，这也是我知识汇总的。
%%%%%%完整的更新记录可参考附录A.
%%%%%%
%%%%%%不管怎么说，模板更新应该是一件好事。
%%%%%%如果``新的格式控制文件''产生的效果对你很有吸引力，那么不妨尝试一下。
%%%%%%应用新的格式控制文件是一件非常简单的事情：
%%%%%%你只要把原来的sjtuthesis.cls, sjtuthesis.cfg, GBxxx.bst覆盖(建议备份或者使用版本控制系统)，重新编译一遍，应该就OK了。
%%%%%%
%%%%%%我大力推荐大家使用\href{http://git-scm.com}{git}\cndash{}一个优秀的代码控制系统\cndash{}管理整个学位论文的协作过程。使用git合并(merge)最新版本的模板，是一件非常安全且无痛的工作。


